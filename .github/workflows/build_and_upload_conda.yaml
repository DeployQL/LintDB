name: Build and upload conda packages

on:
  release:
    types: ['released', 'prereleased']
  workflow_dispatch:        # Un comment line if you also want to trigger action manually

jobs:
  conda_deployment_with_new_tag:
    name: Conda deployment of package
    strategy:
      matrix:
        os: ["macos-14", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Remove unnecessary files
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: install rust 
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1
      - uses: lukka/get-cmake@latest

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: lintdb-build
          use-mamba: true
          mamba-version: "*"
          channels: conda-forge,pytorch,defaults
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Conda env
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CONDA }}/envs
            conda-${{ runner.os }}--${{ runner.arch }}-build-cache
            /vcpkg-binary-cache
          key:
            conda-${{ runner.os }}--${{ runner.arch }}--${{
            steps.get-date.outputs.today }}-${{
            hashFiles('conda/environment.yaml') }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run:
          mamba env update -n lintdb-build -f
          conda/environment.yaml
        if: steps.cache.outputs.cache-hit != 'true'
      
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Conda Build
        id: packages-compilation
        shell: bash -l {0}
        working-directory: ./conda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          VCPKG_DEFAULT_BINARY_CACHE: /vcpkg-binary-cache
          MKLROOT: ${{ github.workspace }}/builds/release/vcpkg_installed/x64-linux/lib/intel64
        run: |
          label=""
          if [ "${{github.event.action}}" == "released" ]; then
            label="main"
          elif [ "${{github.event.action}}" == "prereleased" ]; then
            label="dev"
          else
            echo "The trigger type ${{github.event.action}} is not compatible with `label: auto`"
            exit 1
          fi
          conda activate lintdb-build
          conda config --set anaconda_upload yes
          out_dir=`mktemp -d -t compilation-XXXXXXXXXX`
          echo "::group::Building conda package for host platform"
          echo "conda build lintdb --user deployql --cache-dir "conda-${{ runner.os }}--${{ runner.arch }}-build-cache" --output-folder $out_dir"
          conda build lintdb --user deployql --label $label --cache-dir "conda-${{ runner.os }}--${{ runner.arch }}-build-cache" --output-folder $out_dir
          echo "::set-output name=out_dir::'$out_dir'"
          echo "::endgroup::"
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: conda-build-dir
          path: /usr/local/miniconda/envs/lintdb-build/conda-bld/lintdb-pkg_*/work/tools/vcpkg/buildtrees/*/install-x64-osx-*-out.log
          retention-days: 1
          overwrite: true
