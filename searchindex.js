Search.setIndex({"titles": ["API", "Benchmarks", "lintdb", "lintdb.IndexIVF", "LintDB", "Installation", "lintdb package", "lintdb", "Usage"], "terms": {"lintdb": [0, 1, 8], "packag": [0, 4, 7], "submodul": [0, 7], "modul": [0, 4, 7], "configur": [0, 6, 7], "dim": [0, 6, 7], "nbit": [0, 6, 7, 8], "niter": [0, 6, 7], "nlist": [0, 6, 7], "thisown": [0, 6, 7], "use_compress": [0, 6, 7, 8], "embeddingblock": [0, 6, 7], "dimens": [0, 6, 7, 8], "embed": [0, 4, 6, 7, 8], "num_token": [0, 6, 7], "floatvector": [0, 6, 7], "append": [0, 6, 7, 8], "assign": [0, 6, 7], "back": [0, 6, 7], "begin": [0, 6, 7], "capac": [0, 6, 7], "clear": [0, 6, 7], "empti": [0, 6, 7], "end": [0, 6, 7], "eras": [0, 6, 7], "front": [0, 6, 7], "get_alloc": [0, 6, 7], "insert": [0, 6, 7], "iter": [0, 6, 7, 8], "pop": [0, 6, 7], "pop_back": [0, 6, 7], "push_back": [0, 6, 7], "rbegin": [0, 6, 7], "rend": [0, 6, 7], "reserv": [0, 6, 7], "resiz": [0, 6, 7], "size": [0, 6, 7, 8], "swap": [0, 6, 7], "idxvector": [0, 6, 7], "indexivf": [0, 6, 7, 8], "add": [0, 6, 7, 8], "paramet": [0, 6], "tenant": [0, 6, 8], "doc": [0, 6, 8], "add_singl": [0, 6, 7], "merg": [0, 6, 7], "read_onli": [0, 6, 7], "remov": [0, 6, 7, 8], "save": [0, 6, 7, 8], "search": [0, 1, 4, 6, 7, 8], "set_centroid": [0, 6, 7, 8], "set_weight": [0, 6, 7, 8], "train": [0, 4, 6, 7], "updat": [0, 6, 7], "use_ivf": [0, 6, 7], "rawpassag": [0, 6, 7, 8], "embedding_block": [0, 6, 7], "id": [0, 4, 6, 7, 8], "rawpassageconstptrvector": [0, 6, 7], "rawpassageptrvector": [0, 6, 7], "rawpassagevector": [0, 6, 7], "searchopt": [0, 6, 7], "centroid_score_threshold": [0, 6, 7], "expected_id": [0, 6, 7], "k_top_centroid": [0, 6, 7], "num_second_pass": [0, 6, 7], "searchresult": [0, 6, 7, 8], "score": [0, 6, 7, 8], "searchresultvector": [0, 6, 7], "swigpyiter": [0, 6, 7], "advanc": [0, 6, 7], "copi": [0, 6, 7], "decr": [0, 6, 7], "distanc": [0, 6, 7, 8], "equal": [0, 6, 7], "incr": [0, 6, 7], "next": [0, 6, 7], "previou": [0, 6, 7], "valu": [0, 6, 7], "content": [0, 7], "detail": [1, 4], "document": [1, 3, 6, 8], "dev": [1, 5], "split": 1, "data": [1, 6, 8], "hardwar": 1, "m1": 1, "macbook": 1, "air": 1, "colbert": [1, 4, 8], "code": [1, 5], "block": [1, 6], "consol": 1, "averag": 1, "latenc": [1, 6], "0": [1, 4, 8], "03": 1, "median": 1, "95th": 1, "percentil": 1, "99th": 1, "06": 1, "memori": 1, "usag": [1, 4], "1217791180": 1, "80": 1, "1230757888": 1, "00": 1, "1232928768": 1, "1232938762": 1, "24": 1, "02": 1, "1087740313": 1, "60": 1, "1082081280": 1, "1099202560": 1, "class": [3, 6], "arg": [3, 6], "i": [3, 4, 5, 6, 8], "multi": [3, 4, 6], "vector": [3, 4, 6, 8], "index": [3, 4, 6], "an": [3, 4, 6], "invert": [3, 6], "file": [3, 4, 6], "structur": [3, 6], "thi": [3, 6, 8], "reli": [3, 6], "pretrain": [3, 6], "centroid": [3, 6, 8], "accur": [3, 6], "retriev": [3, 4, 6], "closest": [3, 6], "__init__": 3, "method": [3, 5], "attribut": 3, "databas": [4, 6], "meant": 4, "gen": 4, "ai": 4, "nativ": 4, "support": [4, 8], "late": 4, "interact": 4, "like": 4, "plaid": 4, "open": 4, "sourc": 4, "releas": [4, 5], "under": 4, "allow": 4, "commun": 4, "contribut": 4, "custom": [4, 6], "store": 4, "multipl": 4, "per": 4, "can": [4, 5, 6, 8], "directli": 4, "your": 4, "python": [4, 5], "applic": 4, "No": 4, "need": 4, "setup": [4, 5], "separ": 4, "full": [4, 8], "built": [4, 5], "around": 4, "effici": 4, "storag": 4, "lookup": [4, 6], "token": 4, "level": [4, 6], "": [4, 5, 6, 8], "mission": 4, "platform": 4, "we": [4, 5, 6, 8], "want": [4, 5, 6], "extend": 4, "includ": [4, 5, 6], "snippet": [4, 8], "highlight": 4, "explain": 4, "more": [4, 6], "algorithm": 4, "rank": 4, "increas": [4, 6], "filter": 4, "For": 4, "us": [4, 5, 6, 8], "refer": 4, "offici": [4, 5], "apach": 4, "2": [4, 8], "see": 4, "instal": 4, "conda": 4, "prefer": 4, "build": [4, 6], "from": [4, 6], "linux": 4, "creat": 4, "first": 4, "load": 4, "exist": 4, "reus": 4, "benchmark": 4, "lott": 4, "lifestyl": [4, 8], "40k": 4, "api": 4, "page": 4, "To": 5, "recommend": 5, "c": 5, "cmake": 5, "few": 5, "librari": 5, "openbla": 5, "openmp": 5, "through": 5, "which": 5, "track": 5, "script": 5, "cd": 5, "local": 5, "below": 5, "ar": [5, 6], "outsid": 5, "sudo": 5, "apt": 5, "get": 5, "xorg": 5, "gfortran": 5, "libopenbla": 5, "liblapack": 5, "libfftw3": 5, "unzip": 5, "libomp": 5, "swig": [5, 6], "On": 5, "you": [5, 6], "go": 5, "llvm": 5, "websit": 5, "follow": [5, 8], "automat": 5, "http": [5, 8], "org": 5, "The": [5, 6], "all": [5, 6], "target": 5, "bind": 5, "git": 5, "clone": 5, "github": [5, 8], "com": [5, 8], "deployql": 5, "mkdir": 5, "cc": 5, "cxx": 5, "b": 5, "dcmake_make_program": 5, "make": 5, "dcmake_build_typ": 5, "j12": 5, "replac": 5, "12": 5, "number": [5, 6, 8], "core": 5, "pylintdb": 5, "py": 5, "base": 6, "object": [6, 8], "properti": 6, "dure": 6, "bit": [6, 8], "residu": [6, 8], "compress": [6, 8], "membership": 6, "flag": 6, "expect": 6, "incom": 6, "x": 6, "n": 6, "v": 6, "int": 6, "std": 6, "alloc": 6, "singl": 6, "path": [6, 8], "combin": 6, "anoth": 6, "verifi": 6, "each": [6, 8], "correct": 6, "doesn": 6, "t": 6, "prevent": 6, "indic": 6, "differ": 6, "There": 6, "subtl": 6, "wai": 6, "break": 6, "enabl": [6, 8], "easier": 6, "multiprocess": 6, "l1": 6, "quantiz": 6, "binar": 6, "whether": 6, "lsh": 6, "encod": 6, "delet": [6, 8], "void": 6, "const": 6, "int64_t": 6, "work": 6, "complain": 6, "about": 6, "idx_t": 6, "should": 6, "abl": 6, "resum": 6, "state": 6, "ani": 6, "within": 6, "list": [6, 8], "persist": 6, "find": 6, "nearest": 6, "neighbor": 6, "belong": 6, "n_probe": 6, "k": [6, 8], "top": 6, "result": [6, 8], "return": [6, 8], "opt": 6, "option": 6, "overwrit": 6, "parallel": 6, "write": 6, "later": 6, "weight": 6, "cutoff": 6, "avg_residu": [6, 8], "conveni": 6, "function": 6, "mean": 6, "cluster": [6, 8], "simpl": 6, "struct": 6, "hold": 6, "raw": 6, "passag": [6, 8], "repres": 6, "befor": 6, "contain": [6, 8], "arrai": [6, 8], "thei": 6, "ll": 6, "togeth": 6, "uniqu": [6, 8], "identifi": 6, "must": [6, 8], "integ": [6, 8], "string": 6, "after": 6, "behavior": 6, "These": 6, "expos": 6, "tradeoff": 6, "recal": 6, "decreas": 6, "print": 6, "addit": 6, "inform": 6, "execut": 6, "debug": 6, "threshold": 6, "consid": 6, "kwarg": 6, "1": [6, 8], "demonstr": 8, "fake": 8, "show": 8, "how": 8, "new": 8, "3": 8, "4": 8, "5": 8, "import": 8, "numpi": 8, "np": 8, "tempfil": 8, "db_dir": 8, "db": 8, "128": 8, "10": 8, "random": 8, "normal": 8, "1500": 8, "astyp": 8, "float32": 8, "accept": 8, "row": 8, "rang": 8, "100": 8, "obj": 8, "queri": 8, "tupl": 8, "nprobe": 8, "across": 8, "also": 8, "given": 8, "most": 8, "similar": 8, "procedur": 8, "approach": 8, "faiss": 8, "facebookresearch": 8, "If": 8, "learn": 8, "bucket": 8, "order": 8, "training_data": 8, "sampl": 8, "dataset": 8, "collect": 8, "25000": 8, "tqdm": 8, "desc": 8, "checkpoint": 8, "docfromtext": 8, "squeez": 8, "dd": 8, "concaten": 8, "previous": 8, "model": 8, "index_path": 8, "65536": 8, "run": 8, "context": 8, "runconfig": 8, "nrank": 8, "experi": 8, "checkpoint_config": 8, "colbertconfig": 8, "load_from_checkpoint": 8, "config": 8, "from_exist": 8, "none": 8, "searcher": 8, "d": 8, "ranker": 8, "codec": 8, "bucket_weight": 8, "tolist": 8, "bucket_cutoff": 8}, "objects": {"": [[6, 0, 0, "module-0", "lintdb", ""]], "lintdb": [[6, 1, 1, 0, "Configuration", "Bases: object"], [6, 1, 1, 0, "EmbeddingBlock", "Bases: object"], [6, 1, 1, 0, "IndexIVF", "Bases: object"], [6, 1, 1, 0, "RawPassage", "Bases: object"], [6, 1, 1, 0, "SearchOptions", "Bases: object"], [6, 0, 0, 1, "lintdb", ""]], "lintdb.Configuration": [[6, 2, 1, 0, "dim", "the number of iterations to use during training."], [6, 2, 1, 0, "nbits", "the number of centroids to train."], [6, 2, 1, 0, "niter", "the number of bits to use in residual compression."], [6, 2, 1, 0, "nlist", ""], [6, 2, 1, 0, "thisown", "The membership flag"], [6, 2, 1, 0, "use_compression", "the dimensions expected for incoming vectors."]], "lintdb.EmbeddingBlock": [[6, 2, 1, 0, "dimensions", ""], [6, 2, 1, 0, "embeddings", ""], [6, 2, 1, 0, "num_tokens", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.IndexIVF": [[3, 3, 1, 0, "__init__", ""], [6, 3, 1, 0, "add", "Add will add a block of embeddings to the index."], [6, 3, 1, 0, "add_single", "Add a single document."], [6, 3, 1, 0, "merge", "Merge will combine the index with another index."], [6, 2, 1, 0, "nbits", "number of centroids to use in L1 quantizing."], [6, 2, 1, 0, "niter", "number of bits used in binarizing the residuals."], [6, 2, 1, 0, "nlist", ""], [6, 2, 1, 0, "read_only", "whether to use the LSH encoding for residuals."], [6, 3, 1, 0, "remove", "Remove deletes documents from the index by id."], [6, 3, 1, 0, "save", "Index should be able to resume from a previous state. Any quantization and compression will be saved within the Index's path."], [6, 3, 1, 0, "search", "search will find the nearest neighbors for a vector block."], [6, 3, 1, 0, "set_centroids", "set_centroids overwrites the centroids in the encoder."], [6, 3, 1, 0, "set_weights", "set_weights overwrites the compression weights in the encoder, if using compression."], [6, 2, 1, 0, "thisown", "The membership flag"], [6, 3, 1, 0, "train", ""], [6, 3, 1, 0, "update", "Update is a convenience function for remove and add."], [6, 2, 1, 0, "use_compression", "whether to use the inverted file structure."], [6, 2, 1, 0, "use_ivf", "number of iterations to use in k-means clustering."]], "lintdb.IndexIVF.add": [[6, 4, 2, 0, "docs", "a vector of RawPassages. This includes embeddings and ids."], [6, 4, 2, 0, "tenant", "the tenant to assign the document to."]], "lintdb.RawPassage": [[6, 2, 1, 0, "embedding_block", "embedding_block contains the document's embeddings. this is an array, and can be any number of embeddings, but they'll all be indexed together."], [6, 2, 1, 0, "id", "id is a unique identifier for the document or passage. it must be an integer. we enable document ids to be strings that we can lookup after retrieval."], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.SearchOptions": [[6, 2, 1, 0, "centroid_score_threshold", "expects a document id in the return result. prints additional information during execution. useful for debugging."], [6, 2, 1, 0, "expected_id", ""], [6, 2, 1, 0, "k_top_centroids", "the threshold for centroid scores."], [6, 2, 1, 0, "num_second_pass", "the number of top centroids to consider."], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb": [[6, 1, 1, 0, "Configuration", "Bases: object"], [6, 1, 1, 0, "EmbeddingBlock", "Bases: object"], [6, 1, 1, 0, "FloatVector", "Bases: object"], [6, 1, 1, 0, "IdxVector", "Bases: object"], [6, 1, 1, 0, "IndexIVF", "Bases: object"], [6, 1, 1, 0, "RawPassage", "Bases: object"], [6, 1, 1, 0, "RawPassageConstPtrVector", "Bases: object"], [6, 1, 1, 0, "RawPassagePtrVector", "Bases: object"], [6, 1, 1, 0, "RawPassageVector", "Bases: object"], [6, 1, 1, 0, "SearchOptions", "Bases: object"], [6, 1, 1, 0, "SearchResult", "Bases: object"], [6, 1, 1, 0, "SearchResultVector", "Bases: object"], [6, 1, 1, 0, "SwigPyIterator", "Bases: object"]], "lintdb.lintdb.Configuration": [[6, 2, 1, 0, "dim", "the number of iterations to use during training."], [6, 2, 1, 0, "nbits", "the number of centroids to train."], [6, 2, 1, 0, "niter", "the number of bits to use in residual compression."], [6, 2, 1, 0, "nlist", ""], [6, 2, 1, 0, "thisown", "The membership flag"], [6, 2, 1, 0, "use_compression", "the dimensions expected for incoming vectors."]], "lintdb.lintdb.EmbeddingBlock": [[6, 2, 1, 0, "dimensions", ""], [6, 2, 1, 0, "embeddings", ""], [6, 2, 1, 0, "num_tokens", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.FloatVector": [[6, 3, 1, 0, "append", ""], [6, 3, 1, 0, "assign", ""], [6, 3, 1, 0, "back", ""], [6, 3, 1, 0, "begin", ""], [6, 3, 1, 0, "capacity", ""], [6, 3, 1, 0, "clear", ""], [6, 3, 1, 0, "empty", ""], [6, 3, 1, 0, "end", ""], [6, 3, 1, 0, "erase", ""], [6, 3, 1, 0, "front", ""], [6, 3, 1, 0, "get_allocator", ""], [6, 3, 1, 0, "insert", ""], [6, 3, 1, 0, "iterator", ""], [6, 3, 1, 0, "pop", ""], [6, 3, 1, 0, "pop_back", ""], [6, 3, 1, 0, "push_back", ""], [6, 3, 1, 0, "rbegin", ""], [6, 3, 1, 0, "rend", ""], [6, 3, 1, 0, "reserve", ""], [6, 3, 1, 0, "resize", ""], [6, 3, 1, 0, "size", ""], [6, 3, 1, 0, "swap", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.IdxVector": [[6, 3, 1, 0, "append", ""], [6, 3, 1, 0, "assign", ""], [6, 3, 1, 0, "back", ""], [6, 3, 1, 0, "begin", ""], [6, 3, 1, 0, "capacity", ""], [6, 3, 1, 0, "clear", ""], [6, 3, 1, 0, "empty", ""], [6, 3, 1, 0, "end", ""], [6, 3, 1, 0, "erase", ""], [6, 3, 1, 0, "front", ""], [6, 3, 1, 0, "get_allocator", ""], [6, 3, 1, 0, "insert", ""], [6, 3, 1, 0, "iterator", ""], [6, 3, 1, 0, "pop", ""], [6, 3, 1, 0, "pop_back", ""], [6, 3, 1, 0, "push_back", ""], [6, 3, 1, 0, "rbegin", ""], [6, 3, 1, 0, "rend", ""], [6, 3, 1, 0, "reserve", ""], [6, 3, 1, 0, "resize", ""], [6, 3, 1, 0, "size", ""], [6, 3, 1, 0, "swap", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.IndexIVF": [[6, 3, 1, 0, "add", "Add will add a block of embeddings to the index."], [6, 3, 1, 0, "add_single", "Add a single document."], [6, 3, 1, 0, "merge", "Merge will combine the index with another index."], [6, 2, 1, 0, "nbits", "number of centroids to use in L1 quantizing."], [6, 2, 1, 0, "niter", "number of bits used in binarizing the residuals."], [6, 2, 1, 0, "nlist", ""], [6, 2, 1, 0, "read_only", "whether to use the LSH encoding for residuals."], [6, 3, 1, 0, "remove", "Remove deletes documents from the index by id."], [6, 3, 1, 0, "save", "Index should be able to resume from a previous state. Any quantization and compression will be saved within the Index's path."], [6, 3, 1, 0, "search", "search will find the nearest neighbors for a vector block."], [6, 3, 1, 0, "set_centroids", "set_centroids overwrites the centroids in the encoder."], [6, 3, 1, 0, "set_weights", "set_weights overwrites the compression weights in the encoder, if using compression."], [6, 2, 1, 0, "thisown", "The membership flag"], [6, 3, 1, 0, "train", ""], [6, 3, 1, 0, "update", "Update is a convenience function for remove and add."], [6, 2, 1, 0, "use_compression", "whether to use the inverted file structure."], [6, 2, 1, 0, "use_ivf", "number of iterations to use in k-means clustering."]], "lintdb.lintdb.IndexIVF.add": [[6, 4, 2, 0, "docs", "a vector of RawPassages. This includes embeddings and ids."], [6, 4, 2, 0, "tenant", "the tenant to assign the document to."]], "lintdb.lintdb.RawPassage": [[6, 2, 1, 0, "embedding_block", "embedding_block contains the document's embeddings. this is an array, and can be any number of embeddings, but they'll all be indexed together."], [6, 2, 1, 0, "id", "id is a unique identifier for the document or passage. it must be an integer. we enable document ids to be strings that we can lookup after retrieval."], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.RawPassageConstPtrVector": [[6, 3, 1, 0, "append", ""], [6, 3, 1, 0, "assign", ""], [6, 3, 1, 0, "back", ""], [6, 3, 1, 0, "begin", ""], [6, 3, 1, 0, "capacity", ""], [6, 3, 1, 0, "clear", ""], [6, 3, 1, 0, "empty", ""], [6, 3, 1, 0, "end", ""], [6, 3, 1, 0, "erase", ""], [6, 3, 1, 0, "front", ""], [6, 3, 1, 0, "get_allocator", ""], [6, 3, 1, 0, "insert", ""], [6, 3, 1, 0, "iterator", ""], [6, 3, 1, 0, "pop", ""], [6, 3, 1, 0, "pop_back", ""], [6, 3, 1, 0, "push_back", ""], [6, 3, 1, 0, "rbegin", ""], [6, 3, 1, 0, "rend", ""], [6, 3, 1, 0, "reserve", ""], [6, 3, 1, 0, "resize", ""], [6, 3, 1, 0, "size", ""], [6, 3, 1, 0, "swap", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.RawPassagePtrVector": [[6, 3, 1, 0, "append", ""], [6, 3, 1, 0, "assign", ""], [6, 3, 1, 0, "back", ""], [6, 3, 1, 0, "begin", ""], [6, 3, 1, 0, "capacity", ""], [6, 3, 1, 0, "clear", ""], [6, 3, 1, 0, "empty", ""], [6, 3, 1, 0, "end", ""], [6, 3, 1, 0, "erase", ""], [6, 3, 1, 0, "front", ""], [6, 3, 1, 0, "get_allocator", ""], [6, 3, 1, 0, "insert", ""], [6, 3, 1, 0, "iterator", ""], [6, 3, 1, 0, "pop", ""], [6, 3, 1, 0, "pop_back", ""], [6, 3, 1, 0, "push_back", ""], [6, 3, 1, 0, "rbegin", ""], [6, 3, 1, 0, "rend", ""], [6, 3, 1, 0, "reserve", ""], [6, 3, 1, 0, "resize", ""], [6, 3, 1, 0, "size", ""], [6, 3, 1, 0, "swap", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.RawPassageVector": [[6, 3, 1, 0, "append", ""], [6, 3, 1, 0, "assign", ""], [6, 3, 1, 0, "back", ""], [6, 3, 1, 0, "begin", ""], [6, 3, 1, 0, "capacity", ""], [6, 3, 1, 0, "clear", ""], [6, 3, 1, 0, "empty", ""], [6, 3, 1, 0, "end", ""], [6, 3, 1, 0, "erase", ""], [6, 3, 1, 0, "front", ""], [6, 3, 1, 0, "get_allocator", ""], [6, 3, 1, 0, "insert", ""], [6, 3, 1, 0, "iterator", ""], [6, 3, 1, 0, "pop", ""], [6, 3, 1, 0, "pop_back", ""], [6, 3, 1, 0, "push_back", ""], [6, 3, 1, 0, "rbegin", ""], [6, 3, 1, 0, "rend", ""], [6, 3, 1, 0, "reserve", ""], [6, 3, 1, 0, "resize", ""], [6, 3, 1, 0, "size", ""], [6, 3, 1, 0, "swap", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.SearchOptions": [[6, 2, 1, 0, "centroid_score_threshold", "expects a document id in the return result. prints additional information during execution. useful for debugging."], [6, 2, 1, 0, "expected_id", ""], [6, 2, 1, 0, "k_top_centroids", "the threshold for centroid scores."], [6, 2, 1, 0, "num_second_pass", "the number of top centroids to consider."], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.SearchResult": [[6, 2, 1, 0, "id", ""], [6, 2, 1, 0, "score", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.SearchResultVector": [[6, 3, 1, 0, "append", ""], [6, 3, 1, 0, "assign", ""], [6, 3, 1, 0, "back", ""], [6, 3, 1, 0, "begin", ""], [6, 3, 1, 0, "capacity", ""], [6, 3, 1, 0, "clear", ""], [6, 3, 1, 0, "empty", ""], [6, 3, 1, 0, "end", ""], [6, 3, 1, 0, "erase", ""], [6, 3, 1, 0, "front", ""], [6, 3, 1, 0, "get_allocator", ""], [6, 3, 1, 0, "insert", ""], [6, 3, 1, 0, "iterator", ""], [6, 3, 1, 0, "pop", ""], [6, 3, 1, 0, "pop_back", ""], [6, 3, 1, 0, "push_back", ""], [6, 3, 1, 0, "rbegin", ""], [6, 3, 1, 0, "rend", ""], [6, 3, 1, 0, "reserve", ""], [6, 3, 1, 0, "resize", ""], [6, 3, 1, 0, "size", ""], [6, 3, 1, 0, "swap", ""], [6, 2, 1, 0, "thisown", "The membership flag"]], "lintdb.lintdb.SwigPyIterator": [[6, 3, 1, 0, "advance", ""], [6, 3, 1, 0, "copy", ""], [6, 3, 1, 0, "decr", ""], [6, 3, 1, 0, "distance", ""], [6, 3, 1, 0, "equal", ""], [6, 3, 1, 0, "incr", ""], [6, 3, 1, 0, "next", ""], [6, 3, 1, 0, "previous", ""], [6, 2, 1, 0, "thisown", "The membership flag"], [6, 3, 1, 0, "value", ""]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:parameter"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "parameter", "Python parameter"]}, "titleterms": {"api": 0, "benchmark": 1, "lott": 1, "lifestyl": 1, "40k": 1, "lintdb": [2, 3, 4, 5, 6, 7], "indexivf": 3, "kei": 4, "featur": 4, "roadmap": 4, "document": 4, "licens": 4, "content": [4, 6], "indic": 4, "tabl": 4, "instal": 5, "conda": 5, "prefer": 5, "build": 5, "from": [5, 8], "sourc": 5, "linux": 5, "depend": 5, "clang": 5, "packag": 6, "submodul": 6, "modul": 6, "usag": 8, "creat": 8, "your": 8, "first": 8, "databas": 8, "load": 8, "an": 8, "exist": 8, "train": 8, "reus": 8, "index": 8, "weight": 8}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "Benchmarks": [[1, "benchmarks"]], "Benchmark: LoTTE Lifestyle 40k": [[1, "benchmark-lotte-lifestyle-40k"]], "lintdb": [[2, "module-0"], [7, "lintdb"]], "lintdb.IndexIVF": [[3, "lintdb-indexivf"]], "LintDB": [[4, "lintdb"]], "Key Features": [[4, "key-features"]], "Roadmap": [[4, "roadmap"]], "Documentation": [[4, "documentation"]], "License": [[4, "license"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Installation": [[5, "installation"]], "Conda (Preferred)": [[5, "conda-preferred"]], "Building from source": [[5, "building-from-source"]], "Linux": [[5, "linux"]], "Install dependencies": [[5, "install-dependencies"]], "Install Clang": [[5, "install-clang"]], "Build LintDB": [[5, "build-lintdb"]], "lintdb package": [[6, "lintdb-package"]], "Submodules": [[6, "submodules"]], "lintdb.lintdb module": [[6, "module-lintdb.lintdb"]], "Module contents": [[6, "module-0"]], "Usage": [[8, "usage"]], "Create your first database": [[8, "create-your-first-database"]], "Load an existing database": [[8, "load-an-existing-database"]], "Train (or reuse) an index": [[8, "train-or-reuse-an-index"]], "Train the index": [[8, "train-the-index"]], "Reuse the trained weights from an existing index": [[8, "reuse-the-trained-weights-from-an-existing-index"]]}, "indexentries": {"lintdb": [[2, "module-0"], [2, "module-lintdb"], [6, "module-0"], [6, "module-lintdb"]], "module": [[2, "module-0"], [2, "module-lintdb"], [6, "module-0"], [6, "module-lintdb"], [6, "module-lintdb.lintdb"]], "indexivf (class in lintdb)": [[3, "lintdb.IndexIVF"], [6, "lintdb.IndexIVF"]], "__init__() (lintdb.indexivf method)": [[3, "lintdb.IndexIVF.__init__"]], "configuration (class in lintdb)": [[6, "lintdb.Configuration"]], "configuration (class in lintdb.lintdb)": [[6, "lintdb.lintdb.Configuration"]], "embeddingblock (class in lintdb)": [[6, "lintdb.EmbeddingBlock"]], "embeddingblock (class in lintdb.lintdb)": [[6, "lintdb.lintdb.EmbeddingBlock"]], "floatvector (class in lintdb.lintdb)": [[6, "lintdb.lintdb.FloatVector"]], "idxvector (class in lintdb.lintdb)": [[6, "lintdb.lintdb.IdxVector"]], "indexivf (class in lintdb.lintdb)": [[6, "lintdb.lintdb.IndexIVF"]], "rawpassage (class in lintdb)": [[6, "lintdb.RawPassage"]], "rawpassage (class in lintdb.lintdb)": [[6, "lintdb.lintdb.RawPassage"]], "rawpassageconstptrvector (class in lintdb.lintdb)": [[6, "lintdb.lintdb.RawPassageConstPtrVector"]], "rawpassageptrvector (class in lintdb.lintdb)": [[6, "lintdb.lintdb.RawPassagePtrVector"]], "rawpassagevector (class in lintdb.lintdb)": [[6, "lintdb.lintdb.RawPassageVector"]], "searchoptions (class in lintdb)": [[6, "lintdb.SearchOptions"]], "searchoptions (class in lintdb.lintdb)": [[6, "lintdb.lintdb.SearchOptions"]], "searchresult (class in lintdb.lintdb)": [[6, "lintdb.lintdb.SearchResult"]], "searchresultvector (class in lintdb.lintdb)": [[6, "lintdb.lintdb.SearchResultVector"]], "swigpyiterator (class in lintdb.lintdb)": [[6, "lintdb.lintdb.SwigPyIterator"]], "add() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.add"]], "add() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.add"]], "add_single() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.add_single"]], "add_single() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.add_single"]], "advance() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.advance"]], "append() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.append"]], "append() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.append"]], "append() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.append"]], "append() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.append"]], "append() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.append"]], "append() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.append"]], "assign() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.assign"]], "assign() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.assign"]], "assign() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.assign"]], "assign() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.assign"]], "assign() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.assign"]], "assign() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.assign"]], "back() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.back"]], "back() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.back"]], "back() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.back"]], "back() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.back"]], "back() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.back"]], "back() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.back"]], "begin() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.begin"]], "begin() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.begin"]], "begin() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.begin"]], "begin() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.begin"]], "begin() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.begin"]], "begin() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.begin"]], "capacity() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.capacity"]], "capacity() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.capacity"]], "capacity() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.capacity"]], "capacity() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.capacity"]], "capacity() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.capacity"]], "capacity() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.capacity"]], "centroid_score_threshold (lintdb.searchoptions property)": [[6, "lintdb.SearchOptions.centroid_score_threshold"]], "centroid_score_threshold (lintdb.lintdb.searchoptions property)": [[6, "lintdb.lintdb.SearchOptions.centroid_score_threshold"]], "clear() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.clear"]], "clear() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.clear"]], "clear() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.clear"]], "clear() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.clear"]], "clear() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.clear"]], "clear() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.clear"]], "copy() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.copy"]], "decr() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.decr"]], "dim (lintdb.configuration property)": [[6, "lintdb.Configuration.dim"]], "dim (lintdb.lintdb.configuration property)": [[6, "lintdb.lintdb.Configuration.dim"]], "dimensions (lintdb.embeddingblock property)": [[6, "lintdb.EmbeddingBlock.dimensions"]], "dimensions (lintdb.lintdb.embeddingblock property)": [[6, "lintdb.lintdb.EmbeddingBlock.dimensions"]], "distance() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.distance"]], "embedding_block (lintdb.rawpassage property)": [[6, "lintdb.RawPassage.embedding_block"]], "embedding_block (lintdb.lintdb.rawpassage property)": [[6, "lintdb.lintdb.RawPassage.embedding_block"]], "embeddings (lintdb.embeddingblock property)": [[6, "lintdb.EmbeddingBlock.embeddings"]], "embeddings (lintdb.lintdb.embeddingblock property)": [[6, "lintdb.lintdb.EmbeddingBlock.embeddings"]], "empty() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.empty"]], "empty() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.empty"]], "empty() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.empty"]], "empty() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.empty"]], "empty() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.empty"]], "empty() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.empty"]], "end() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.end"]], "end() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.end"]], "end() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.end"]], "end() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.end"]], "end() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.end"]], "end() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.end"]], "equal() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.equal"]], "erase() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.erase"]], "erase() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.erase"]], "erase() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.erase"]], "erase() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.erase"]], "erase() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.erase"]], "erase() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.erase"]], "expected_id (lintdb.searchoptions property)": [[6, "lintdb.SearchOptions.expected_id"]], "expected_id (lintdb.lintdb.searchoptions property)": [[6, "lintdb.lintdb.SearchOptions.expected_id"]], "front() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.front"]], "front() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.front"]], "front() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.front"]], "front() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.front"]], "front() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.front"]], "front() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.front"]], "get_allocator() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.get_allocator"]], "get_allocator() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.get_allocator"]], "get_allocator() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.get_allocator"]], "get_allocator() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.get_allocator"]], "get_allocator() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.get_allocator"]], "get_allocator() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.get_allocator"]], "id (lintdb.rawpassage property)": [[6, "lintdb.RawPassage.id"]], "id (lintdb.lintdb.rawpassage property)": [[6, "lintdb.lintdb.RawPassage.id"]], "id (lintdb.lintdb.searchresult property)": [[6, "lintdb.lintdb.SearchResult.id"]], "incr() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.incr"]], "insert() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.insert"]], "insert() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.insert"]], "insert() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.insert"]], "insert() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.insert"]], "insert() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.insert"]], "insert() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.insert"]], "iterator() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.iterator"]], "iterator() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.iterator"]], "iterator() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.iterator"]], "iterator() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.iterator"]], "iterator() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.iterator"]], "iterator() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.iterator"]], "k_top_centroids (lintdb.searchoptions property)": [[6, "lintdb.SearchOptions.k_top_centroids"]], "k_top_centroids (lintdb.lintdb.searchoptions property)": [[6, "lintdb.lintdb.SearchOptions.k_top_centroids"]], "lintdb.lintdb": [[6, "module-lintdb.lintdb"]], "merge() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.merge"]], "merge() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.merge"]], "nbits (lintdb.configuration property)": [[6, "lintdb.Configuration.nbits"]], "nbits (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.nbits"]], "nbits (lintdb.lintdb.configuration property)": [[6, "lintdb.lintdb.Configuration.nbits"]], "nbits (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.nbits"]], "next() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.next"]], "niter (lintdb.configuration property)": [[6, "lintdb.Configuration.niter"]], "niter (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.niter"]], "niter (lintdb.lintdb.configuration property)": [[6, "lintdb.lintdb.Configuration.niter"]], "niter (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.niter"]], "nlist (lintdb.configuration property)": [[6, "lintdb.Configuration.nlist"]], "nlist (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.nlist"]], "nlist (lintdb.lintdb.configuration property)": [[6, "lintdb.lintdb.Configuration.nlist"]], "nlist (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.nlist"]], "num_second_pass (lintdb.searchoptions property)": [[6, "lintdb.SearchOptions.num_second_pass"]], "num_second_pass (lintdb.lintdb.searchoptions property)": [[6, "lintdb.lintdb.SearchOptions.num_second_pass"]], "num_tokens (lintdb.embeddingblock property)": [[6, "lintdb.EmbeddingBlock.num_tokens"]], "num_tokens (lintdb.lintdb.embeddingblock property)": [[6, "lintdb.lintdb.EmbeddingBlock.num_tokens"]], "pop() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.pop"]], "pop() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.pop"]], "pop() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.pop"]], "pop() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.pop"]], "pop() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.pop"]], "pop() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.pop"]], "pop_back() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.pop_back"]], "pop_back() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.pop_back"]], "pop_back() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.pop_back"]], "pop_back() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.pop_back"]], "pop_back() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.pop_back"]], "pop_back() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.pop_back"]], "previous() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.previous"]], "push_back() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.push_back"]], "push_back() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.push_back"]], "push_back() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.push_back"]], "push_back() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.push_back"]], "push_back() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.push_back"]], "push_back() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.push_back"]], "rbegin() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.rbegin"]], "rbegin() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.rbegin"]], "rbegin() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.rbegin"]], "rbegin() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.rbegin"]], "rbegin() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.rbegin"]], "rbegin() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.rbegin"]], "read_only (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.read_only"]], "read_only (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.read_only"]], "remove() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.remove"]], "remove() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.remove"]], "rend() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.rend"]], "rend() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.rend"]], "rend() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.rend"]], "rend() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.rend"]], "rend() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.rend"]], "rend() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.rend"]], "reserve() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.reserve"]], "reserve() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.reserve"]], "reserve() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.reserve"]], "reserve() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.reserve"]], "reserve() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.reserve"]], "reserve() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.reserve"]], "resize() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.resize"]], "resize() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.resize"]], "resize() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.resize"]], "resize() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.resize"]], "resize() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.resize"]], "resize() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.resize"]], "save() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.save"]], "save() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.save"]], "score (lintdb.lintdb.searchresult property)": [[6, "lintdb.lintdb.SearchResult.score"]], "search() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.search"]], "search() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.search"]], "set_centroids() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.set_centroids"]], "set_centroids() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.set_centroids"]], "set_weights() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.set_weights"]], "set_weights() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.set_weights"]], "size() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.size"]], "size() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.size"]], "size() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.size"]], "size() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.size"]], "size() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.size"]], "size() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.size"]], "swap() (lintdb.lintdb.floatvector method)": [[6, "lintdb.lintdb.FloatVector.swap"]], "swap() (lintdb.lintdb.idxvector method)": [[6, "lintdb.lintdb.IdxVector.swap"]], "swap() (lintdb.lintdb.rawpassageconstptrvector method)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.swap"]], "swap() (lintdb.lintdb.rawpassageptrvector method)": [[6, "lintdb.lintdb.RawPassagePtrVector.swap"]], "swap() (lintdb.lintdb.rawpassagevector method)": [[6, "lintdb.lintdb.RawPassageVector.swap"]], "swap() (lintdb.lintdb.searchresultvector method)": [[6, "lintdb.lintdb.SearchResultVector.swap"]], "thisown (lintdb.configuration property)": [[6, "lintdb.Configuration.thisown"]], "thisown (lintdb.embeddingblock property)": [[6, "lintdb.EmbeddingBlock.thisown"]], "thisown (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.thisown"]], "thisown (lintdb.rawpassage property)": [[6, "lintdb.RawPassage.thisown"]], "thisown (lintdb.searchoptions property)": [[6, "lintdb.SearchOptions.thisown"]], "thisown (lintdb.lintdb.configuration property)": [[6, "lintdb.lintdb.Configuration.thisown"]], "thisown (lintdb.lintdb.embeddingblock property)": [[6, "lintdb.lintdb.EmbeddingBlock.thisown"]], "thisown (lintdb.lintdb.floatvector property)": [[6, "lintdb.lintdb.FloatVector.thisown"]], "thisown (lintdb.lintdb.idxvector property)": [[6, "lintdb.lintdb.IdxVector.thisown"]], "thisown (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.thisown"]], "thisown (lintdb.lintdb.rawpassage property)": [[6, "lintdb.lintdb.RawPassage.thisown"]], "thisown (lintdb.lintdb.rawpassageconstptrvector property)": [[6, "lintdb.lintdb.RawPassageConstPtrVector.thisown"]], "thisown (lintdb.lintdb.rawpassageptrvector property)": [[6, "lintdb.lintdb.RawPassagePtrVector.thisown"]], "thisown (lintdb.lintdb.rawpassagevector property)": [[6, "lintdb.lintdb.RawPassageVector.thisown"]], "thisown (lintdb.lintdb.searchoptions property)": [[6, "lintdb.lintdb.SearchOptions.thisown"]], "thisown (lintdb.lintdb.searchresult property)": [[6, "lintdb.lintdb.SearchResult.thisown"]], "thisown (lintdb.lintdb.searchresultvector property)": [[6, "lintdb.lintdb.SearchResultVector.thisown"]], "thisown (lintdb.lintdb.swigpyiterator property)": [[6, "lintdb.lintdb.SwigPyIterator.thisown"]], "train() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.train"]], "train() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.train"]], "update() (lintdb.indexivf method)": [[6, "lintdb.IndexIVF.update"]], "update() (lintdb.lintdb.indexivf method)": [[6, "lintdb.lintdb.IndexIVF.update"]], "use_compression (lintdb.configuration property)": [[6, "lintdb.Configuration.use_compression"]], "use_compression (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.use_compression"]], "use_compression (lintdb.lintdb.configuration property)": [[6, "lintdb.lintdb.Configuration.use_compression"]], "use_compression (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.use_compression"]], "use_ivf (lintdb.indexivf property)": [[6, "lintdb.IndexIVF.use_ivf"]], "use_ivf (lintdb.lintdb.indexivf property)": [[6, "lintdb.lintdb.IndexIVF.use_ivf"]], "value() (lintdb.lintdb.swigpyiterator method)": [[6, "lintdb.lintdb.SwigPyIterator.value"]]}, "docurls": ["api.html", "benchmarks.html", "generated/lintdb.html", "generated/lintdb.IndexIVF.html", "index.html", "installation.html", "lintdb.html", "modules.html", "usage.html"]})