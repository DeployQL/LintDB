[build-system]
requires = [
    "scikit-build-core-conan >=0.4.0",
    "nanobind >=1.3.2"
]
build-backend = "scikit_build_core_conan.build"

[project]
name = "lintdb"
version = "0.5.1"
description = "Python library for LintDB, a vector database for token embeddings and late interaction."
readme = "README.md"
license = {text = "Apache-2.0 License"}
requires-python = ">=3.9"
authors = [
    { name = "Matt Barta", email = "matt@deployql.com" },
]
classifiers = [
    "License :: OSI Approved :: Apache-2.0 License",
]
dependencies = [
    "typing_extensions",
]

[project.urls]
Homepage = "https://github.com/deployQL/lintdb"

[tool.pytest.ini_options]
testpaths = [
    "lintdb/python/tests"
]

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

cmake.build-type = "Release"

sdist.cmake = true
wheel.packages = ["lintdb/python"]
cmake.targets = ['lintdb', 'core']

[tool.scikit-build-core-conan]
path = "."
build = "missing"
options = ["build_python=True", "build_tests=False", "build_benchmarks=False"]
settings = []
config = []
output_folder = "build"

#[[tool.scikit-build-core-conan.overrides]]
#if.platform-system = "linux"
#options= ["build_python=true"]
