[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "lintdb"
version = "0.4.1"
description = "Python library for LintDB, a vector database for token embeddings and late interaction."
readme = "README.md"
license = {text = "Apache-2.0 License"}
requires-python = ">=3.10"
authors = [
    { name = "Matt Barta", email = "matt@deployql.com" },
]
classifiers = [
    "License :: OSI Approved :: Apache-2.0 License",
]
dependencies = [
    "typing_extensions",
]

[project.urls]
Homepage = "https://github.com/deployQL/lintdb"

[tool.pytest.ini_options]
#pythonpath = [ "./builds/python/lintdb/python/Release", "lintdb/python" ]
testpaths = [
    "lintdb/python/tests"
]

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "builds/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp310"

cmake.build-type = "Release"

sdist.cmake = true
wheel.packages = ["lintdb/python"]
cmake.targets = ['lintdb_lib', 'core']

[tool.scikit-build.cmake.define]
CMAKE_CXX_COMPILER = "clang++-18"
OpenMP_CXX_FLAGS = "-fopenmp=libiomp5"
OpenMP_CXX_LIB_NAMES = "libiomp5"
# to use a shared library, we need to jump through some hoops for python: https://github.com/scikit-build/scikit-build/issues/272
# SO link: https://stackoverflow.com/questions/70044257/packaging-executable-shared-library-and-python-bindings-not-finding-library
BUILD_SHARED_LIBS = "OFF"
#CMAKE_INSTALL_LIBDIR = "lib"
CMAKE_VERBOSE_MAKEFILE = "OFF"
ENABLE_PYTHON = "ON"
BUILD_TESTING = "OFF"
BLA_VENDOR = "Intel10_64lp"